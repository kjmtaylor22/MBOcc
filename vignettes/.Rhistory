theme(legend.key.size = unit(4,"mm"), text=element_text(size=8),
legend.position = "bottom", legend.justification = "right",
legend.key.spacing = unit(0,"mm")) +
facet_grid(Rearing~L1, scales="free_x"),
nrow=1, layout_matrix=matrix(c(1,3,4,2,3,4), nrow=2, ncol=3, byrow=T))
gridExtra::grid.arrange(mleplotsF[[5]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
stateplotsF[[1]] + facet_grid(.~L1) +
labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_blank(), axis.title.x = element_blank(),
text=element_text(size=10)) +
guides(fill="none"),
siteplotsF[[1]] + labs(title=NULL) + facet_grid(.~L1) +
theme(legend.justification = "top",
text=element_text(size=10),
axis.text.x = element_text(angle=75, hjust=1, vjust=1)),
cowplot::get_legend(stateplotsF[[3]]),
layout_matrix=matrix(c(1,1,2,2,2,4,1,1,3,3,3,4), nrow=2, ncol=6, byrow=T))
egg::ggarrange(mleplotsF[[8]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[9]] + labs(title=NULL) + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[9]] + labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(2,2,1))
egg::ggarrange(mleplotsF[[9]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[6]] + labs(title=NULL) + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[6]] + labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(2,2,1))
gridExtra::grid.arrange(mleplotsF[[6]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
stateplotsF[[2]] + facet_grid(.~L1) +
labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_blank(), axis.title.x = element_blank(),
text=element_text(size=10)) +
guides(fill="none"),
siteplotsF[[2]] + labs(title=NULL) + facet_grid(.~L1) +
theme(legend.justification = "top",
text=element_text(size=10),
axis.text.x = element_text(angle=75, hjust=1, vjust=1)),
cowplot::get_legend(stateplotsF[[3]]),
layout_matrix=matrix(c(1,1,2,2,2,4,1,1,3,3,3,4), nrow=2, ncol=6, byrow=T))
egg::ggarrange(mleplotsF[[1]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[10]] + labs(title=NULL) + facet_wrap(vars(L1)) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[10]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(1,3,1))
egg::ggarrange(mleplotsF[[7]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[12]] + labs(title=NULL) + facet_wrap(vars(L1)) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[12]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(2,3,1))
egg::ggarrange(mleplotsF[[10]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[11]] + labs(title=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[11]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(3,4,1))
mleplotsF[[2]] +
facet_wrap(vars(beta)) +
theme(text = element_text(size=12))
beta0 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="(Intercept)"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta1 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="Age_weeks"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta2 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="SpeciesTurkey"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta3 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="Age_weeks:SpeciesTurkey"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
stateplotsF[[7]] + facet_grid(L1~Rearing, scales="free") + theme(text=element_text(size=8))
egg::ggarrange(
siteplotsF[[7]] + facet_grid(L1~Rearing) +
geom_point(size=3) +
theme(legend.position = "bottom", text=element_text(size=8)),
predplotF[[1]] + labs(title=NULL) + facet_grid(Sites~Rearing),
nrow=1)
knitr::opts_chunk$set(
collapse = TRUE,
message = F,
warning = F,
comment = "#>",
cache = F,
fig.width=9,
fig.height=7,
fig.align="center"
)
options(rmarkdown.html_vignette.check_title = FALSE)
library(MBOcc)
## Load the data
load("../data/basefiles_26-03-24.RD")
## Load necessary packages
library(dplyr)
library(ggplot2)
library(kableExtra)
## Do some data cleanup
meta$Flock <- factor(meta$Flock, labels=c("","F1","F1","F2","F2","R","RN","RS","SPF-C","SPF-T","UMN"))
meta <- subset(meta, subset=Experiment!="TK-107")
meta <- mutate(meta, Rearing=NA)
meta$Rearing[grep("-85", meta$Experiment)] <- "Commercial"
meta$Rearing[-grep("-85", meta$Experiment)] <- "Research"
meta <- subset(meta, subset=BodySite%in%c("CECUM","ILEUM","NASAL","TRACHEA")&Species!="Control")
nas.expand <- meta[grep("-", meta$Bird_ID),]
nas.expand$Bird_ID <- gsub("--", "-", nas.expand$Bird_ID)
nas.expand <- tidyr::separate(nas.expand, "Bird_ID", c("from","to"),"-", convert=T)
out.expand <- data.frame()
for (j in 1:nrow(nas.expand)){
k <- c(nas.expand$from[j]:nas.expand$to[j])
out1 <- data.frame()
for (l in 1:length(k)){out1 <- rbind(out1, nas.expand[j,])}
out1$from <- k
out1 <- out1[,-which(names(out1)=="to")]
out.expand <- rbind(out.expand, out1)
}
names(out.expand)[names(out.expand)=="from"] <- "Bird_ID"
comm.expand <- data.frame()
for (i in out.expand$SampleID){
comm.expand <- rbind(comm.expand, comm[i,])
}
## Load the data
load("../data/basefiles_26-03-24.RD")
## Load necessary packages
library(dplyr)
library(ggplot2)
library(kableExtra)
## Do some data cleanup
meta$Flock <- factor(meta$Flock, labels=c("","F1","F1","F2","F2","R","RN","RS","SPF-C","SPF-T","UMN"))
meta <- subset(meta, subset=Experiment!="TK-107")
meta <- mutate(meta, Rearing=NA)
meta$Rearing[grep("-85", meta$Experiment)] <- "Commercial"
meta$Rearing[-grep("-85", meta$Experiment)] <- "Research"
meta <- subset(meta, subset=BodySite%in%c("CECUM","ILEUM","NASAL","TRACHEA")&Species!="Control")
nas.expand <- meta[grep("-", meta$Bird_ID),]
nas.expand$Bird_ID <- gsub("--", "-", nas.expand$Bird_ID)
nas.expand <- tidyr::separate(nas.expand, "Bird_ID", c("from","to"),"-", convert=T)
out.expand <- data.frame()
for (j in 1:nrow(nas.expand)){
k <- c(nas.expand$from[j]:nas.expand$to[j])
out1 <- data.frame()
for (l in 1:length(k)){out1 <- rbind(out1, nas.expand[j,])}
out1$from <- k
out1 <- out1[,-which(names(out1)=="to")]
out.expand <- rbind(out.expand, out1)
}
names(out.expand)[names(out.expand)=="from"] <- "Bird_ID"
comm.expand <- data.frame()
for (i in out.expand$SampleID){
comm.expand <- rbind(comm.expand, comm[i,])
}
comm <- comm[-match(nas.expand$SampleID, row.names(comm)),]
comm <- rbind(comm, comm.expand)
out.expand$SampleID <- row.names(comm.expand)
row.names(out.expand) <- out.expand$SampleID
meta <- meta[-grep("-", meta$Bird_ID),]
meta <- rbind(meta, out.expand)
metaR <- subset(meta, subset=Flock=="R")
metaR <- subset(metaR, subset=Age!="01W")
metaRN <- subset(metaR, subset=Bird_ID%in%c(41:50))
metaRN$Flock <- "RN"
metaRS <- subset(metaR, subset=Bird_ID%in%c(51:60))
metaRS$Flock <- "RS"
meta <- subset(meta, subset=Flock!="R")
meta <- rbind(meta, metaRN, metaRS)
row.names(meta) <- meta$SampleID
row.names(tax) <- tax$tag
comm <- comm[row.names(meta),]
rm(comm.expand, metaR, metaRN, metaRS, nas.expand, out.expand, out1, i, j, k, l) #clean up environment
## Select some taxa for downstream analysis
commpath <- comm[,which(tax$genus%in%c("Avibacterium","Ornithobacterium","Staphylococcus","Streptococcus","Enterococcus","Escherichia-Shigella","Mycoplasma","Gallibacterium","Haemophilus","Deinococcus","faecalibacterium","Parasutterella","Fusobacterium"))] %>%
SummarizeCommTax(tax = tax, level = "genus")
commlac <- comm[,which(tax$genus=="Lactobacillus")] %>%
SummarizeCommTax(tax = tax, level = NULL) %>%
.[,-1]
commclos <- comm[,which(tax$genus=="Clostridium")] %>%
SummarizeCommTax(tax = tax, level = NULL) %>%
mutate(`Clostridium (other)`=Clostridium+`Clostridium Clostridium`) %>% .[,-c(1,3)]
commCand <- comm[,which(tax$genus=="Candidatus")] %>%
SummarizeCommTax(tax = tax, level = NULL)
## Compile taxon tables into single table
commset <- cbind(commlac, commclos, commCand, commpath)
rm(comm, commCand, commclos, commlac, commpath, tax) #clean up environment
## Load the package if not already loaded
library(MBOcc)
ids <- c("Bird_ID")
groups <- c("Species","Age_weeks","Flock","Rearing")
## List of psi hypotheses
#each element is a vector of length equal to the number of body sites
#each element reflects a hypothesis about the relationship between body sites
assigns <- list(c(1,1,1,1), #all sites are the same
c(1,1,2,2), #first 2 sites are distinct from last 2
c(1,2,3,3), #first, second, and last two sites are distinct
c(1,1,2,3), #first two, third, and fourth sites are distinct
c(1,2,3,4)) #all four sites are distinct
## List of formulae
formulas <- list(~1,
~Flock,
~Species,
~Rearing,
~1+Age_weeks,
~1+Age_weeks*Species,
~1+Age_weeks*Rearing)
## transform to presence-absence
commset0 <- commset; commset0[commset0>0] <- 1
## format the datasets
format0 <- MBformat(commset0, meta, NULL, ids, groups, 1700, "BodySite")
## save this for later
taxa <- names(format0)
rm(list=setdiff(ls(), c("commset","meta","taxa")))
## Create new binary matrix from count matrix
commsetF <- data.frame(Experiment=meta$Experiment, BodySite=meta$BodySite, Flock=meta$Flock,
Age_weeks=meta$Age_weeks, Species=meta$Species, Rearing=meta$Rearing,
commset, row.names=row.names(commset)) %>% #combine count data with random effect (grouping) vectors
subset(subset=Age_weeks>=3) %>% #make all the flocks' starting sampling points the same
group_by(Experiment, BodySite, Flock, Age_weeks, Species, Rearing) %>%
summarize_all(.funs=mean) %>% #take the mean across all individuals in the flock of the age group
as.data.frame() %>%
`row.names<-`(paste(.$BodySite, .$Flock, .$Age_weeks, sep="_")) #give the 'samples' new names
## Create a new metadata set with the new flock-level information
metaF <- commsetF[,1:6]
## Conduct transformation on the community table
commsetF <- commsetF[,-c(1:6)] %>% #remove metadata from the summarized community table
f.o(., id=metaF$Flock, sitevar=metaF$BodySite, timevar=metaF$Age_weeks, sampleID=row.names(.)) #conduct transformation
## fix species names for legibility
names(commsetF) <- gsub(".", " ", names(commsetF), fixed = T)
names(commsetF) <- gsub(" other ", "(other)", names(commsetF), fixed = T)
## add new time variable to the metadata so our regression intercepts later are biologically interpretable
metaF <- metaF[row.names(commsetF),] %>%
group_by(Experiment,BodySite,Flock,Species,Rearing) %>%
mutate(TmT1=Age_weeks-min(Age_weeks)) %>% ## here, 'TmT1' is 'time minus time 1': It treats the second sampling as the starting point, 0
as.data.frame() %>%
`row.names<-`(paste(.$BodySite, .$Flock, .$Age_weeks, sep="_"))
## Load the package
library(MBOcc)
## Metadata column containing individual IDs
ids <- c("Flock")
## Metadata columns containing fixed effects of interest
groups <- c("TmT1","Species","Rearing")
## Convert to MBOcc list format
formatF <- MBformat(commsetF, meta=metaF, tax=NULL, id.vars=ids,
group.vars=groups, zeroes=0.99, states="BodySite")
## use same taxa as in presence-absence example
formatF <- formatF[taxa]; class(formatF) <- "MBOcc.obj"
## List of psi hypotheses
#each element is a vector of length equal to the number of body sites
#each element reflects a hypothesis about the relationship between body sites
assigns <- list(c(1,1,1,1), #all sites are the same
c(1,1,2,2), #first 2 sites are distinct from last 2
c(1,2,3,3), #first, second, and last two sites are distinct
c(1,1,2,3)) #first two, third, and fourth sites are distinct
## List of formulae
formulas <- list(~1,
~Species,
~Rearing,
~1+TmT1, #again, this 'time' variable means time since second sampling
~1+TmT1*Species,
~1+TmT1*Rearing
)
## Load quietly
load("../output/poultry_metaanalysis_vignette2.RD")
bagF$P.state %>% ## Look at the state pis
reshape2::dcast(., ... ~ variable, value.var = "value") %>%
head(n=10) #look at the first 10 rows
## Look at the state pis
bagF$P.state %>%
reshape2::dcast(., ... ~ variable, value.var = "value") %>%
head(n=10) %>%
kable(digits = 3)  %>%
kable_styling(full_width = T, font_size = 10, bootstrap_options = "condensed") %>%
column_spec(1:8, extra_css = "white-space: nowrap;") %>%
scroll_box(width="700px")
## Look at the site psis
bagF$P.site %>%
reshape2::dcast(., ... ~ variable, value.var = "value") %>%
head(n=10) %>%
kable(digits = 3)  %>%
kable_styling(full_width = T, font_size = 10, bootstrap_options = "condensed") %>%
column_spec(1:8, extra_css = "white-space: nowrap;") %>%
scroll_box(width="700px")
## Look at the regression betas for just one of the taxa
bagF$MLE.SE %>%
head(n=10) %>%
kable(digits = 3)  %>%
kable_styling(full_width = T, font_size = 10, bootstrap_options = "condensed") %>%
column_spec(1:8, extra_css = "white-space: nowrap;") %>%
scroll_box(width="700px")
## Grab the list of the best models for each taxon
tabF <- mbF$best
## Split formulae into just the first (since they're all the same here)
tabF$formulae <- sapply(tabF$formulae,
function(x){
return(strsplit(x,", ")[[1]][[1]])})
## Output table using kableExtra
tabF %>%
.[order(.$formulae, .$psi, .$taxon, decreasing = c(T,F,F), method = "radix"),c(1,2,4,3,5)] %>%
`colnames<-`(c("Taxon","Model","\u03a8CINT","BIC", "\u0394BIC")) %>%
kbl(caption = "The best model for each species (above-below mean)") %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
## Load quietly
load("../output/poultry_metaanalysis_vignette2_plots.RD")
cbind(names(mleplotsF)[1:length(siteplotsF)],
names(siteplotsF), names(stateplotsF),
names(predplotF)[1:length(siteplotsF)])
## Streptococcus (1.1.1.1)
gridExtra::grid.arrange(
mleplotsF[[4]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
axis.text.x=element_blank(), text=element_text(size=8)),
siteplotsF[[3]] + labs(title=NULL) +
geom_point(size=3) +
theme(legend.position = "bottom", text=element_text(size=8)),
predplotF[[3]] + labs(title=NULL) + facet_grid(Sites~.),
stateplotsF[[3]] + labs(title=NULL, subtitle = NULL) +
theme(legend.key.size = unit(4,"mm"), text=element_text(size=8),
legend.position = "bottom", legend.justification = "right",
legend.key.spacing = unit(0,"mm")) +
facet_grid(L1~., scales="free_x"),
nrow=1, layout_matrix=matrix(c(1,3,4,2,3,4), nrow=2, ncol=3, byrow=T))
##
gridExtra::grid.arrange(
mleplotsF[[3]] + facet_wrap(vars(beta)) +
theme(axis.text.x=element_blank(), text=element_text(size=8)),
siteplotsF[[4]] + labs(title=NULL) +
geom_point(size=3) + facet_grid(L1~Species, scales="free_x") +
theme(legend.position = "bottom", text=element_text(size=8)),
predplotF[[2]] + labs(title=NULL) + facet_grid(Species~Sites),
stateplotsF[[4]] + labs(title=NULL, subtitle = NULL) +
theme(legend.key.size = unit(4,"mm"), text=element_text(size=8),
legend.position = "bottom", legend.justification = "right",
legend.key.spacing = unit(0,"mm")) +
facet_grid(Species~L1, scales="free_x"),
nrow=1, layout_matrix=matrix(c(1,3,4,2,3,4), nrow=2, ncol=3, byrow=T))
egg::ggarrange(siteplotsF[[5]] + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[5]] + labs(title=NULL, subtitle=NULL) +
facet_grid(L1~TmT1, space = "free_x", scales="free_x") +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(1,3))
##
gridExtra::grid.arrange(
mleplotsF[[2]] + facet_wrap(vars(beta)) +
theme(axis.text.x=element_blank(), text=element_text(size=8)),
siteplotsF[[7]] + labs(title=NULL) +
geom_point(size=3) + facet_grid(L1~Rearing, scales="free_x") +
theme(legend.position = "bottom", text=element_text(size=8)),
predplotF[[1]] + labs(title=NULL) + facet_grid(Rearing~Sites),
stateplotsF[[7]] + labs(title=NULL, subtitle = NULL) +
theme(legend.key.size = unit(4,"mm"), text=element_text(size=8),
legend.position = "bottom", legend.justification = "right",
legend.key.spacing = unit(0,"mm")) +
facet_grid(Rearing~L1, scales="free_x"),
nrow=1, layout_matrix=matrix(c(1,3,4,2,3,4), nrow=2, ncol=3, byrow=T))
egg::ggarrange(siteplotsF[[8]] + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[8]] + labs(title=NULL, subtitle=NULL) +
facet_grid(L1~TmT1, space = "free_x", scales="free_x") +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(1,3))
gridExtra::grid.arrange(mleplotsF[[5]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
stateplotsF[[1]] + facet_grid(.~L1) +
labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_blank(), axis.title.x = element_blank(),
text=element_text(size=10)) +
guides(fill="none"),
siteplotsF[[1]] + labs(title=NULL) + facet_grid(.~L1) +
theme(legend.justification = "top",
text=element_text(size=10),
axis.text.x = element_text(angle=75, hjust=1, vjust=1)),
cowplot::get_legend(stateplotsF[[3]]),
layout_matrix=matrix(c(1,1,2,2,2,4,1,1,3,3,3,4), nrow=2, ncol=6, byrow=T))
egg::ggarrange(mleplotsF[[8]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[9]] + labs(title=NULL) + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[9]] + labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(2,2,1))
gridExtra::grid.arrange(mleplotsF[[6]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
stateplotsF[[2]] + facet_grid(.~L1) +
labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_blank(), axis.title.x = element_blank(),
text=element_text(size=10)) +
guides(fill="none"),
siteplotsF[[2]] + labs(title=NULL) + facet_grid(.~L1) +
theme(legend.justification = "top",
text=element_text(size=10),
axis.text.x = element_text(angle=75, hjust=1, vjust=1)),
cowplot::get_legend(stateplotsF[[3]]),
layout_matrix=matrix(c(1,1,2,2,2,4,1,1,3,3,3,4), nrow=2, ncol=6, byrow=T))
egg::ggarrange(mleplotsF[[9]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[6]] + labs(title=NULL) + facet_grid(variable~L1) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[6]] + labs(title=NULL, subtitle=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
nrow=1, widths=c(2,2,1))
egg::ggarrange(mleplotsF[[1]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[10]] + labs(title=NULL) + facet_wrap(vars(L1)) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[10]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(1,3,1))
egg::ggarrange(mleplotsF[[7]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[12]] + labs(title=NULL) + facet_wrap(vars(L1)) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[12]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(2,3,1))
egg::ggarrange(mleplotsF[[10]] +
theme(strip.text.y.right = element_text(angle=-90, hjust=0.5),
text=element_text(size=10)),
siteplotsF[[11]] + labs(title=NULL) +
theme(axis.text.x=element_text(angle=75, hjust=1, vjust=1),
text=element_text(size=10)),
stateplotsF[[11]] + labs(title=NULL, subtitle=NULL) +
theme(text=element_text(size=10)),
nrow=1, widths=c(3,4,1))
mleplotsF[[2]] +
facet_wrap(vars(beta)) +
theme(text = element_text(size=12))
beta0 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="(Intercept)"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta1 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="Age_weeks"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta2 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="SpeciesTurkey"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta3 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="Age_weeks:SpeciesTurkey"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta0
exp(beta0)/(1+exp(beta0))
beta1
beta0 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="(Intercept)"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta1 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="TmT1"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta2 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="RearingResearch"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
beta3 <- round(bagF$MLE.SE$mle[bagF$MLE.SE$beta=="TmT1:RearingResearch"&bagF$MLE.SE$L1=="Fusobacterium"&bagF$MLE.SE$site.psi=="1"],1)
rm(list=setdiff(ls(), c("commset","meta","taxa")))
## Create new binary matrix from count matrix
commsetHist1 <- data.frame(X1=meta$Experiment, X2=meta$BodySite, commset,
row.names=row.names(commset)) %>% #combine count data with random effect (grouping) vectors
split(., .$X1, drop=T) %>% #split by by Experiment
lapply(., function(x){ #apply to each data frame in the new list
y <- x[,-(which(colSums(x[,-c(1:2)])==0)+2)] %>%
reshape2::melt()
return(y)}) %>%
reshape2::melt(.) %>%
ggplot(., aes(value, fill=variable, color=variable)) +
facet_grid(X1 ~ X2, scales="free") +
geom_histogram(position="identity", alpha=0.2) +
guides(fill=guide_legend(ncol=2), color=guide_legend(ncol=2)); commsetHist1
## Try it again with a log transformation
commsetHist2 <- data.frame(X1=meta$Experiment, X2=meta$BodySite, log10(commset+1),
row.names=row.names(commset)) %>% #combine count data with random effect (grouping) vectors
split(., .$X1, drop=T) %>% #split by by Experiment
lapply(., function(x){ #apply to each data frame in the new list
y <- x[,-(which(colSums(x[,-c(1:2)])==0)+2)] %>%
reshape2::melt()
return(y)}) %>%
reshape2::melt(.) %>%
ggplot(., aes(value, fill=variable, color=variable)) +
facet_grid(X1 ~ X2, scales="free") +
geom_histogram(position="identity", alpha=0.2) +
guides(fill=guide_legend(ncol=2), color=guide_legend(ncol=2)); commsetHist2
## Look at the arithmetic mean and distribution above and below it
arith <- subset(commsetHist1$data, subset=variable=="Lactobacillus.aviarius"&X2=="CECUM"&X1=="CK-106")
head(arith)
mean(arith$value) # baseline mean (arithmetic)
View(commset)
View(meta)
## Look at the arithmetic mean and distribution above and below it
arith <- subset(commsetHist1$data, subset=variable=="Lactobacillus.aviarius"&X2=="CECUM"&X1=="CK-85")
mean(arith$value) # baseline mean (arithmetic)
length(which(arith$value>mean(arith$value))) # number of 1s
length(which(arith$value<mean(arith$value))) # number of 0s
## now look at the geometric mean and distribution above and below it
log10t <- subset(commsetHist2$data, subset=variable=="Lactobacillus.aviarius"&X2=="CECUM"&X1=="CK-85")
mean(log10t$value) # baseline mean (geometric)
length(which(log10t$value>mean(log10t$value))) # number of 1s
length(which(log10t$value<mean(log10t$value))) # number of 0s
10^mean(log10t$value) # new baseline mean (in arithmetic scale)
