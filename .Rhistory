mutate(stack=1-cumsum(value))
labels <- stateplots$`1 IFN.l`$data %>% group_by(formulae, psi, L1, variable) %>%
filter(value==max(value))  %>% group_by(L1) %>%
mutate(stack=cumsum(value))
labels <- stateplots$`1 IFN.l`$data %>% group_by(formulae, psi, L1, variable) %>%
filter(value==max(value))  %>% group_by(L1) %>%
mutate(stack=scales::rescale(1-cumsum(value)))
stateplots[[1]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7))
library(ggplot2)
stateplots[[1]]+
guides(fill="none") +
geom_text(data=labels, aes(covariate, stack, label=variable), color="blue") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7))
labels <- stateplots$`1 IFN.l`$data %>% group_by(formulae, psi, L1, variable) %>%
filter(value==max(value))  %>% group_by(L1) %>%
mutate(stack=scales::rescale(1-cumsum(value)),
xs=seq(min(value),max(value),length=length(value)))
stateplots[[1]]+
guides(fill="none") +
geom_text(data=labels, aes(xs, stack, label=variable), color="blue") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7))
labels <- stateplots$`1 IFN.l`$data %>% group_by(formulae, psi, L1, variable) %>%
filter(value==max(value))  %>% group_by(L1) %>%
mutate(stack=scales::rescale(1-cumsum(value)),
xs=seq(min(covariate),max(covariate),length=length(value)))
stateplots[[1]]+
guides(fill="none") +
geom_text(data=labels, aes(xs, stack, label=variable), color="blue") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7))
help("stat_summary")
stateplots[[1]]+
guides(fill="none") +
stat_summary(aes(covariate, value, label=variable),
fun.data="mean", geom="text", position="stack", color="blue") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7))
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
eval = FALSE,
fig.path = "figs/")
stateplots <- plot(bag, plot="State", return=T)
load("output/poultry_influenza_full.RD")
stateplots <- plot(bag, plot="State", return=T)
save(mleplots, siteplots, stateplots, preds, file="output/poultry_influenza_plots.RD")
egg::ggarrange(
stateplots[[1]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7)),
stateplots[[4]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
stateplots[[5]]+
#guides(fill="none") +
facet_wrap(vars(L1), scales="free_x", nrow=1)  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
widths=c(2,2,1),
nrow=1
)
mleplots <- plot(bag, plot="MLE", return=T)
stateplots <- plot(bag, plot="State", return=T)
egg::ggarrange(
stateplots[[1]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7)),
stateplots[[4]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
stateplots[[5]]+
#guides(fill="none") +
facet_wrap(vars(L1), scales="free_x", nrow=1)  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
widths=c(2,2,1),
nrow=1
)
stateplots <- plot(bag, plot="State", return=T)
egg::ggarrange(
stateplots[[1]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7)),
stateplots[[4]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
stateplots[[5]]+
#guides(fill="none") +
facet_wrap(vars(L1), scales="free_x", nrow=1)  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
widths=c(2,2,1),
nrow=1
)
stateplots <- plot(bag, plot="State", return=T)
egg::ggarrange(
stateplots[[1]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text = element_text(size=7)),
stateplots[[4]]+
guides(fill="none") +
facet_wrap(vars(L1), scales="free_x")  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
stateplots[[5]]+
#guides(fill="none") +
facet_wrap(vars(L1), scales="free_x", nrow=1)  +
theme(strip.text = element_text(size=7),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size=7)),
widths=c(2,2,1),
nrow=1
)
save(mleplots, siteplots, stateplots, preds, file="output/poultry_influenza_plots.RD")
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
eval = FALSE,
fig.path = "figs/")
load("output/poultry_metaanalysis_plots.RD")
load("output/poultry_metaanalysis_full.RD")
stateplots <- plot(bag, plot="State", return=T)
save(mleplots, siteplots, stateplots, g, preds, file="output/poultry_metaanalysis_plots.RD")
load("output/poultry_metaanalysis_plots.RD")
load("output/poultry_metaanalysis_full.RD")
mleplots <- plot(bag, plot="MLE", return=T)
siteplots <- plot(bag, plot="Site", return=T)
stateplots <- plot(bag, plot="State", return=T)
newdata <- data.frame(Age_weeks=rep(1:100, 6),
Experiment=rep(c("TK-85","TK-85","TK-93","CK-85","CK-85","CK-106"), each=100),
Species=rep(c("Turkey","Chicken"), each=300),
Rearing=rep(rep(c("Commercial","Commercial","Research"), each=100), 2),
Flock=rep(c("F1","F2","SPF-T","RN","RS","SPF-C"), each=100))
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
colsSP <- group.colors(unique(as.character(bag$P.site$L1)), show = F)
save(mleplots, siteplots, stateplots, g, preds, file="output/poultry_metaanalysis_plots.RD")
library(MBOcc)
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
eval = FALSE,
fig.path = "figs/")
load("output/poultry_metaanalysis_full.RD")
mleplots <- plot(bag, plot="MLE", return=T)
siteplots <- plot(bag, plot="Site", return=T)
stateplots <- plot(bag, plot="State", return=T)
newdata <- data.frame(Age_weeks=rep(1:100, 6),
Experiment=rep(c("TK-85","TK-85","TK-93","CK-85","CK-85","CK-106"), each=100),
Species=rep(c("Turkey","Chicken"), each=300),
Rearing=rep(rep(c("Commercial","Commercial","Research"), each=100), 2),
Flock=rep(c("F1","F2","SPF-T","RN","RS","SPF-C"), each=100))
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
colsSP <- group.colors(unique(as.character(bag$P.site$L1)), show = F)
save(mleplots, siteplots, stateplots, g, preds, file="output/poultry_metaanalysis_plots.RD")
save(mleplots, siteplots, stateplots, preds, file="output/poultry_metaanalysis_plots.RD")
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
eval = FALSE,
fig.path = "figs/")
load("data/MBOcc_output.RD")
load("output/MBOcc_output.RD")
View(new$best   )
View(test)
View(new)
class(test)
??ginv
load("data/MBOcc_output.RD")
library(MBOcc)
load("output/MBOcc_output_full.RD")
load("output/poultry_metaanalysis_full.RD")
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
eval = FALSE,
fig.path = "figs/")
newdata <- data.frame(Age_weeks=rep(1:100, 6),
Experiment=rep(c("TK-85","TK-85","TK-93","CK-85","CK-85","CK-106"), each=100),
Species=rep(c("Turkey","Chicken"), each=300),
Rearing=rep(rep(c("Commercial","Commercial","Research"), each=100), 2),
Flock=rep(c("F1","F2","SPF-T","RN","RS","SPF-C"), each=100))
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
library(dplyr)
library(ggplot2)
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
colsSP <- group.colors(unique(as.character(bag$P.site$L1)), show = F)
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)),
ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=lcl,
ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=fit, color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=lcl,
ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)),
ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
View(preds)
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)),
ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(-lcl)/(1+exp(-lcl)),
ymax=exp(-ucl)/(1+exp(-ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(-fit)/(1+exp(-fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
View(new)
plogis(new$estimates$`Lactobacillus (asv1)`$mles[2])
exp(new$estimates$`Lactobacillus (asv1)`$mles[2])/(1+exp(new$estimates$`Lactobacillus (asv1)`$mles[2]))
exp(-new$estimates$`Lactobacillus (asv1)`$mles[2])/(1+exp(-new$estimates$`Lactobacillus (asv1)`$mles[2]))
1/(1+exp(-new$estimates$`Lactobacillus (asv1)`$mles[2]))
try <- predict(new, newdata, each = T)
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)),
ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
View(test)
View(preds)
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=lcl,
ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=fit, color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)),
ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=lcl,
ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=fit, color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
View(preds)
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
#geom_ribbon(aes(x=Age_weeks, ymin=lcl,
#                ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=fit, color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
preds$fit[1]
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
labs(title="1.1.1.1") +
facet_wrap(vars(L1)) +
#geom_ribbon(aes(x=Age_weeks, ymin=lcl,
#                ymax=ucl, fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(-fit)/(1+exp(-fit))^2, color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few() +
theme(legend.position = "bottom",
strip.text = element_text(size=7),
axis.text = element_text(size=7))
g4
preds <- mutate(preds, deriv=exp(-fit)/(1+exp(-fit))^2)
preds <- mutate(preds, deriv=exp(-fit)/(1+exp(-fit))^2)
preds <- mutate(preds, var=nu*(deriv^2))
View(preds)
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
preds <- mutate(preds, deriv=exp(-fit)/(1+exp(-fit))^2)
preds <- mutate(preds, var=nu*(deriv^2))
preds <- mutate(preds, var=nu.sq*(deriv^2))
View(preds)
try <- predict(new, newdata, each = T)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
View(preds)
View(newdata)
View(preds)
try <- predict(new, newdata, each = T)
newdata <- data.frame(Age_weeks=rep(1:100, 6),
Experiment=rep(c("TK-85","TK-85","TK-93","CK-85","CK-85","CK-106"), each=100),
Species=rep(c("Turkey","Chicken"), each=300),
Rearing=rep(rep(c("Commercial","Commercial","Research"), each=100), 2),
Flock=rep(c("F1","F2","SPF-T","RN","RS","SPF-C"), each=100))
try <- predict(new, newdata, each = T)
View(try)
try <- lapply(try, function(x){if (!"Sites"%in%names(x)){cbind(x,Sites=rep(1,nrow(x)))}else{return(x)}})
View(try)
preds <- reshape2::melt(try, id.vars=c("Experiment","Species","Flock","Rearing","Age_weeks","formulae","psi","Sites")) %>%
unique() %>%
reshape2::dcast(formulae+psi+L1+Experiment+Species+Flock+Rearing+Age_weeks+Sites ~ variable)
View(preds)
View(subset(preds, subset=L1=="Lactobacillus (asv9)"))
View(subset(preds, subset=L1=="Lactobacillus (asv9)"&Flock=="SPF-T"))
vi <- subset(preds, subset=L1=="Lactobacillus (asv9)"&Flock=="SPF-T")
plot(vi$Age_weeks, vi$fit)
base::plot(vi$Age_weeks, vi$fit)
points(vi$Age_weeks, vi$ucl)
points(vi$Age_weeks, vi$lcl)
base::plot(vi$Age_weeks, plogis(vi$fit), type="l")
lines(vi$Age_weeks, plogis(vi$ucl))
lines(vi$Age_weeks, plogis(vi$lcl))
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)), ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few()
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
facet_wrap(vars(L1)) +
# geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)), ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_smooth(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few()
g4
View(g4$data)
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
facet_wrap(vars(L1)) +
# geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)), ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_line(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few()
g4
g4 <- ggplot(subset(preds, subset=psi=="1 1 1 1")) +
facet_wrap(vars(L1)) +
geom_ribbon(aes(x=Age_weeks, ymin=exp(lcl)/(1+exp(lcl)), ymax=exp(ucl)/(1+exp(ucl)), fill=Flock), alpha=0.3) +
geom_line(aes(x=Age_weeks, y=exp(fit)/(1+exp(fit)), color=Flock), linewidth=1) +
paletteer::scale_color_paletteer_d("yarrr::appletv") + #see https://r-graph-gallery.com/color-palette-finder for colors
paletteer::scale_fill_paletteer_d("yarrr::appletv") +
ggthemes::theme_few()
g4
View(test)
View(test$`Lactobacillus (asv7)`)
View(test$`Lactobacillus salivarius (asv4)`)
## Global options
knitr::opts_chunk$set(warning = FALSE,
message = FALSE)
print(test$`Subdoligranulum (asv2821)`)
